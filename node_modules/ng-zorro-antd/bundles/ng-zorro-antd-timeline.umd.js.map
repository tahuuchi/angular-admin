{"version":3,"file":"ng-zorro-antd-timeline.umd.js","sources":["../../components/timeline/timeline.service.ts","../../components/timeline/typings.ts","../../components/timeline/timeline-item.component.ts","../../components/timeline/timeline.component.ts","../../components/timeline/timeline.module.ts","../../components/timeline/public-api.ts","../../components/timeline/ng-zorro-antd-timeline.ts"],"names":["ReplaySubject","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","ViewChild","Input","Subject","takeUntil","Directionality","Optional","ContentChildren","NgModule","BidiModule","CommonModule","PlatformModule","NzIconModule","NzOutletModule"],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class TimelineService {\n  check$ = new ReplaySubject(1);\n  markForCheck(): void {\n    this.check$.next();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst TimelineModes = ['left', 'alternate', 'right', 'custom'] as const;\nexport type NzTimelineMode = typeof TimelineModes[number];\n\nconst TimelinePositions = ['left', 'right'] as const;\nexport type NzTimelinePosition = typeof TimelinePositions[number];\n\nexport const TimelineTimeDefaultColors = ['red', 'blue', 'green', 'grey', 'gray'] as const;\nexport type NzTimelineItemColor = typeof TimelineTimeDefaultColors[number];\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineItemColor, NzTimelinePosition, TimelineTimeDefaultColors } from './typings';\n\nfunction isDefaultColor(color?: string): boolean {\n  return TimelineTimeDefaultColors.findIndex(i => i === color) !== -1;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  template: `\n    <ng-template #template>\n      <li\n        class=\"ant-timeline-item\"\n        [class.ant-timeline-item-right]=\"(nzPosition || position) === 'right'\"\n        [class.ant-timeline-item-left]=\"(nzPosition || position) === 'left'\"\n        [class.ant-timeline-item-last]=\"isLast\"\n      >\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div\n          class=\"ant-timeline-item-head\"\n          [class.ant-timeline-item-head-red]=\"nzColor === 'red'\"\n          [class.ant-timeline-item-head-blue]=\"nzColor === 'blue'\"\n          [class.ant-timeline-item-head-green]=\"nzColor === 'green'\"\n          [class.ant-timeline-item-head-gray]=\"nzColor === 'gray'\"\n          [class.ant-timeline-item-head-custom]=\"!!nzDot\"\n          [style.border-color]=\"borderColor\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"nzDot\">{{ nzDot }}</ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-content></ng-content>\n        </div>\n      </li>\n    </ng-template>\n  `\n})\nexport class NzTimelineItemComponent implements OnChanges {\n  @ViewChild('template', { static: false }) template!: TemplateRef<void>;\n\n  @Input() nzPosition?: NzTimelinePosition;\n  @Input() nzColor: NzTimelineItemColor = 'blue';\n  @Input() nzDot?: string | TemplateRef<void>;\n\n  isLast = false;\n  borderColor: string | null = null;\n  position?: NzTimelinePosition;\n\n  constructor(private cdr: ChangeDetectorRef, private timelineService: TimelineService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.timelineService.markForCheck();\n    if (changes.nzColor) {\n      this.updateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private updateCustomColor(): void {\n    this.borderColor = isDefaultColor(this.nzColor) ? null : this.nzColor;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { TimelineService } from './timeline.service';\nimport { NzTimelineMode, NzTimelinePosition } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  providers: [TimelineService],\n  exportAs: 'nzTimeline',\n  template: `\n    <ul\n      class=\"ant-timeline\"\n      [class.ant-timeline-right]=\"nzMode === 'right'\"\n      [class.ant-timeline-alternate]=\"nzMode === 'alternate' || nzMode === 'custom'\"\n      [class.ant-timeline-pending]=\"!!nzPending\"\n      [class.ant-timeline-reverse]=\"nzReverse\"\n      [class.ant-timeline-rtl]=\"dir === 'rtl'\"\n    >\n      <!-- pending dot (reversed) -->\n      <ng-container *ngIf=\"nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- timeline items -->\n      <ng-container *ngFor=\"let item of timelineItems\">\n        <ng-template [ngTemplateOutlet]=\"item.template\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"!nzReverse\" [ngTemplateOutlet]=\"pendingTemplate\"></ng-container>\n      <!-- pending dot -->\n    </ul>\n    <ng-template #pendingTemplate>\n      <li *ngIf=\"nzPending\" class=\"ant-timeline-item ant-timeline-item-pending\">\n        <div class=\"ant-timeline-item-tail\"></div>\n        <div class=\"ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue\">\n          <ng-container *nzStringTemplateOutlet=\"nzPendingDot\">\n            {{ nzPendingDot }}\n            <i *ngIf=\"!nzPendingDot\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n        </div>\n        <div class=\"ant-timeline-item-content\">\n          <ng-container *nzStringTemplateOutlet=\"nzPending\">\n            {{ isPendingBoolean ? '' : nzPending }}\n          </ng-container>\n        </div>\n      </li>\n    </ng-template>\n    <!-- Grasp items -->\n    <ng-content></ng-content>\n  `\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy, OnInit {\n  @ContentChildren(NzTimelineItemComponent) listOfItems!: QueryList<NzTimelineItemComponent>;\n\n  @Input() nzMode: NzTimelineMode = 'left';\n  @Input() nzPending?: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot?: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n  timelineItems: NzTimelineItemComponent[] = [];\n  dir: Direction = 'ltr';\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private timelineService: TimelineService,\n    @Optional() private directionality: Directionality\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzMode, nzReverse, nzPending } = changes;\n\n    if (simpleChangeActivated(nzMode) || simpleChangeActivated(nzReverse)) {\n      this.updateChildren();\n    }\n\n    if (nzPending) {\n      this.isPendingBoolean = nzPending.currentValue === true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.timelineService.check$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n\n    this.dir = this.directionality.value;\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n\n    this.listOfItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateChildren();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfItems && this.listOfItems.length) {\n      const length = this.listOfItems.length;\n\n      this.listOfItems.forEach((item, index) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position = getInferredTimelineItemPosition(index, this.nzMode);\n        item.detectChanges();\n      });\n      this.timelineItems = this.nzReverse ? this.listOfItems.toArray().reverse() : this.listOfItems.toArray();\n    }\n    this.cdr.markForCheck();\n  }\n}\n\nfunction simpleChangeActivated(simpleChange?: SimpleChange): boolean {\n  return !!(simpleChange && (simpleChange.previousValue !== simpleChange.currentValue || simpleChange.isFirstChange()));\n}\n\nfunction getInferredTimelineItemPosition(index: number, mode: NzTimelineMode): NzTimelinePosition | undefined {\n  return mode === 'custom'\n    ? undefined\n    : mode === 'left'\n    ? 'left'\n    : mode === 'right'\n    ? 'right'\n    : mode === 'alternate' && index % 2 === 0\n    ? 'left'\n    : 'right';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './timeline-item.component';\nimport { NzTimelineComponent } from './timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [BidiModule, CommonModule, PlatformModule, NzIconModule, NzOutletModule]\n})\nexport class NzTimelineModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './timeline-item.component';\nexport * from './timeline.component';\nexport * from './timeline.module';\nexport * from './timeline.service';\nexport { NzTimelineMode, NzTimelinePosition, NzTimelineItemColor } from './typings';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}