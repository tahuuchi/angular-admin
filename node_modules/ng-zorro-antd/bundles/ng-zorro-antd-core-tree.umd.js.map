{"version":3,"file":"ng-zorro-antd-core-tree.umd.js","sources":["../../components/core/tree/nz-tree-base-node.ts","../../node_modules/tslib/tslib.es6.js","../../components/core/tree/nz-tree-base-util.ts","../../components/core/tree/nz-tree-base.service.ts","../../components/core/tree/nz-tree-service.resolver.ts","../../components/core/tree/nz-tree-base.ts","../../components/core/tree/public-api.ts","../../components/core/tree/ng-zorro-antd-core-tree.ts"],"names":["BehaviorSubject","Injectable","InjectionToken"],"mappings":";;;;;;IAAA;AACA;AACI;AAGD;AAAQ;AACJ;AAAY;AAA2B;AAC/B;AAAyB;AAEf;AAAY,QAiEnC,oBAAY,MAAsC,EAAE,MAAgC,EAAE,OAAwC;AAChI,YADE,iBAwCC;AACH,YAzCsD,uBAAA,EAAA,aAAgC;AAAI,YAAF,wBAAA,EAAA,cAAwC;AAChI,YAtCU,WAAM,GAAW,EAAE,CAAC;AAC9B,YACE,UAAK,GAAW,CAAC,CAAC;AACpB;AAA2B,YAEzB,eAAU,GAAsB,IAAI,CAAC;AACvC,YAAU,UAAK,GAAW,EAAE,CAAC;AAC7B,YAAU,cAAS,GAAiB,EAAE,CAAC;AACvC,YAAU,YAAO,GAAY,KAAK,CAAC;AACnC,YAAU,eAAU,GAAY,KAAK,CAAC;AACtC,YAAU,kBAAa,GAAY,KAAK,CAAC;AACzC,YAAU,gBAAW,GAAY,KAAK,CAAC;AACvC,YAAU,uBAAkB,GAAY,KAAK,CAAC;AAC9C,YAAU,gBAAW,GAAY,KAAK,CAAC;AACvC,YAAU,mBAAc,GAAY,KAAK,CAAC;AAC1C,YAAU,gBAAW,GAAY,KAAK,CAAC;AACvC,YAAU,eAAU,GAAY,KAAK,CAAC;AACtC,YAAE,YAAO,GAAY,KAAK,CAAC;AAC3B,YAAE,cAAS,GAAY,KAAK,CAAC;AAC7B,YACE,YAAO,GAA6B,IAAI,CAAC;AAC3C,YAiBI,IAAI,MAAM,YAAY,UAAU,EAAE;AACtC,gBAAM,OAAO,MAAM,CAAC;AACpB,aAAK;AACL,YAAI,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC;AACnC,YAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB,YAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B,YAAI,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;AAC7B,YAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;AACxC,YAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;AACnC,YAAI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC;AAC1C,YAAI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB;AACQ,YAAJ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC;AAC9C,YAAI,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,UAAU,KAAK,KAAK,CAAC;AACxE,YAAI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC;AAChD,YAAI,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,eAAe,IAAI,KAAK,CAAC;AAC9D,YAAI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC;AACxE,YAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAChC,YAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC;AACtE,YAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,YAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B;AAEO;AAEA;AACF,YADD,IAAI,MAAM,EAAE;AAChB,gBAAM,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACpC,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrB,aAAK;AACL,YAAI,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE;AAC5E,gBAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,WAAW;AAAI,oBACrC,IAAM,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC;AACnC,oBAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AACpI,wBAAU,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/C,qBAAS;AACT,oBAAQ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,WAAW,EAAE,KAAI,CAAC,CAAC,CAAC;AAC/D,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AACH,QAnDE,sBAAI,mCAAW;AAAI,iBAAnB;AAAc,gBACZ,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAC5E,aAAG;AAEH;AAEI;AACF,WALC;AACH,QAsDE,sBAAI,6BAAK;AAAI;AACR;AAGA;AAAmB;AACV;AACT,iBANL;AAAc,gBACZ,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,aAAG;AAEH,iBAAE,UAAU,KAAa;AACzB,gBAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AACQ;AAGG,WAXR;AACH,QAME,sBAAI,4BAAI;AAAI,iBAAZ;AAAc,gBACZ,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,aAAG;AAEH,iBAAE,UAAS,KAAa;AACxB,gBAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AAA+B;AAE7B,WATC;AACH,QAME,sBAAI,gCAAQ;AAAI,iBAAhB;AAAc,gBACZ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,aAAG;AAEH,iBAAE,UAAa,KAAmB;AAClC,gBAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AACK;AAGC,WAXH;AACH,QAME,sBAAI,8BAAM;AAAI,iBAAd;AAAc,gBACZ,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,aAAG;AAEH,iBAAE,UAAW,KAAc;AAC3B,gBAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AACE;AAGF,WAXG;AACH,QAME,sBAAI,iCAAS;AAAI,iBAAjB;AAAc,gBACZ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,aAAG;AAEH,iBAAE,UAAc,KAAc;AAC9B,gBAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,gBAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;AAChC,gBAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACvC,aAAG;AAEH;AAA+B;AACF,WAT1B;AACH,QAOE,sBAAI,qCAAa;AAAI,iBAArB;AAAc,gBACZ,OAAO,IAAI,CAAC,cAAc,CAAC;AAC/B,aAAG;AAEH,iBAAE,UAAkB,KAAc;AAClC,gBAAI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAChC,gBAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC3C,aAAG;AAEH;AAA+B;AACD,WAR3B;AACH,QAME,sBAAI,oCAAY;AAAI,iBAApB;AAAc,gBACZ,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,aAAG;AAEH,iBAAE,UAAiB,KAAc;AACjC,gBAAI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AACC;AACE,WATA;AACH,QAME,sBAAI,kCAAU;AAAI,iBAAlB;AAAc,gBACZ,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,aAAG;AAEH,iBAAE,UAAe,KAAc;AAC/B,gBAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AAA+B;AACN,WARtB;AACH,QAME,sBAAI,yCAAiB;AAAI,iBAAzB;AAAc,gBACZ,OAAO,IAAI,CAAC,kBAAkB,CAAC;AACnC,aAAG;AAEH,iBAAE,UAAsB,KAAc;AACtC,gBAAI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACpC,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AACC;AACE,WATA;AACH,QAME,sBAAI,kCAAU;AAAI,iBAAlB;AAAc,gBACZ,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,aAAG;AAEH,iBAAE,UAAe,KAAc;AAC/B,gBAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,gBAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,gBAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACxC,gBAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACtC,aAAG;AAEH;AACC;AACE,WAXA;AACH,QAQE,sBAAI,kCAAU;AAAI,iBAAlB;AAAc,gBACZ,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,aAAG;AAEH,iBAAE,UAAe,KAAc;AAC/B,gBAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,gBAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,gBAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACxC,aAAG;AAEH;AACE;AAGF,WAZG;AACH,QAOE,sBAAI,iCAAS;AAAI,iBAAjB;AAAc,gBACZ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,aAAG;AAEH,iBAAE,UAAc,KAAc;AAC9B,gBAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,gBAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,aAAG;AAEH;AAA+B;AAA+B,WAP3D;AACH,QAMS,mCAAc,GAAd,UAAe,OAAwB,EAAE,WAA4B;AAAI,YAA1D,wBAAA,EAAA,eAAwB;AAAI,YAAF,4BAAA,EAAA,mBAA4B;AAAI,YAC9E,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAC1C,YAAI,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AAC/D,gBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACrC,aAAK;AACL,SAAG;AAEH,QAAS,+BAAU,GAAV,UAAW,OAAwB,EAAE,WAA4B;AAAI,YAA1D,wBAAA,EAAA,eAAwB;AAAI,YAAF,4BAAA,EAAA,mBAA4B;AAAI,YAC1E,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AAClC,YAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AAC7B,YAAI,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;AACrC,SAAG;AAEH,QAAS,gCAAW,GAAX,UAAY,KAAc;AAAI,YACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,YAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,YAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACxC,SAAG;AAEH,QAAS,kCAAa,GAAb;AAAc,YACnB,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,SAAG;AAEH,QAAS,gCAAW,GAAX;AAAc,YACnB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,SAAG;AAEH;AACM;AAEA;AAAY,QAAT,gCAAW,GAAX,UAAY,QAAqB,EAAE,QAAqB;AAAI,YAA5D,iBA+BN;AACH,YAhC4C,yBAAA,EAAA,YAAoB,CAAC;AAAI,YACjE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,gBAAM,QAAQ,CAAC,OAAO,CAAC,UAAA,IAAI;AAAI,oBACvB,IAAM,YAAY,GAAG,UAAC,CAAa;AAAI,wBACrC,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,4BAC3B,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,aAAa,EAAG,CAAC,KAAK,GAAG,CAAC,CAAC;AACnD;AACgB,4BAAJ,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AACrC,4BAAY,YAAY,CAAC,CAAC,CAAC,CAAC;AAC5B,yBAAW,CAAC,CAAC;AACb,qBAAS,CAAC;AACV,oBAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,oBAAQ,IAAI,KAAK,YAAY,UAAU,EAAE;AACzC,wBAAU,KAAK,CAAC,UAAU,GAAG,KAAI,CAAC;AAClC,qBAAS;AAAC,yBAAK;AACf,wBAAU,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,KAAI,CAAC,CAAC;AAC7C,qBAAS;AACT,oBAAQ,KAAK,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrC,oBAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACzC,oBAAQ,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5B,oBAAQ,IAAI;AACZ,wBAAU,QAAQ,KAAK,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACjG;AACc,qBAAL;AAAC,oBAAA,OAAO,CAAC,EAAE,GAAE;AACtB,iBAAO,CAAC,CAAC;AACT,gBAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,GAAA,CAAC,CAAC;AACnE;AACU,gBAAJ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,aAAK;AACL,YAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;AACzC,YAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACtC,SAAG;AAEH,QAAS,kCAAa,GAAb;AAAc;AACI,YACvB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAC3C,YAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,YAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC9B,YAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACtC,SAAG;AAEH,QAAS,2BAAM,GAAN;AAAc,YAAd,iBAQN;AACH,YARI,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC5C,YAAI,IAAI,UAAU,EAAE;AACpB,gBAAM,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AACrF,gBAAM,UAAU,CAAC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,QAAS,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AAC/F,gBAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACtC,gBAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;AACxC,aAAK;AACL,SAAG;AAEH,QAAS,qCAAgB,GAAhB,UAAiB,GAAW;AAAI,YACrC,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,gBAAM,QAAQ,GAAG;AACjB,oBAAQ,KAAK,WAAW;AACxB,wBAAU,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACpD,wBAAU,MAAM;AAChB,oBAAQ,KAAK,eAAe;AAC5B,wBAAU,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACxD,wBAAU,MAAM;AAChB,oBAAQ,KAAK,YAAY;AACzB,wBAAU,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACrD,wBAAU,MAAM;AAChB,oBAAQ,KAAK,YAAY;AACzB,wBAAU,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC/C,wBAAU,MAAM;AAChB,oBAAQ,KAAK,eAAe;AAC5B,wBAAU,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3D,wBAAU,MAAM;AAChB,oBAAQ,KAAK,QAAQ;AACrB,wBAAU,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/C,wBAAU,MAAM;AAChB,oBAAQ,KAAK,UAAU;AACvB,wBAAU,IAAI,CAAC,WAAW,CAAC,eAAe,CAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAI,GAAA,CAAC,CACxD,CAAC;AACZ,wBAAU,MAAM;AAChB,iBAAO;AACP,aAAK;AACL,YAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,SAAG;AAEH,QAAS,2BAAM,GAAN;AAAc,YACnB,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,gBAAM,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AACpC,aAAK;AACL,SAAG;AACF,yBAAA;AACA,KADA;AACG;AAAC,IChWL;AAAkF;AAGlF;AAAC;AACG;AAEC;AAAC;AACG;AACG;AACG;AACG;AACG;AACG;AACG;AACG,IAA9B;AAA8B,IAE9B,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;AAAI,QACjC,aAAa,GAAG,MAAM,CAAC,cAAc;AAAI,aACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;AAAI,YAChF,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;AAAE,gBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAAE,oBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAAC,QACvG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAC,IAChC,CAAC,CAAC;AAAC,aAEa,SAAS,CAAC,CAAC,EAAE,CAAC;AAAI,QAC9B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;AAAE,YACvC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;AAAC,QAC/F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAC,QACrB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;AAAC,QACxC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAAC,IAC1F,CAAC;AAAC,IAEK,IAAI,QAAQ,GAAG;AACtB,QAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;AAAI,YAC/C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAAE,gBACnD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAAC,gBAClB,KAAK,IAAI,CAAC,IAAI,CAAC;AAAE,oBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAAE,wBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,aACjF;AAAC,YACF,OAAO,CAAC,CAAC;AAAC,SACb,CAAA;AAAC,QACF,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAAC,IAC5C,CAAC,CAAA;AAAC,aAEc,MAAM,CAAC,CAAC,EAAE,CAAC;AAAI,QAC3B,IAAI,CAAC,GAAG,EAAE,CAAC;AAAC,QACZ,KAAK,IAAI,CAAC,IAAI,CAAC;AAAE,YAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AAAE,gBACjF,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,QACjB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;AAAE,YACjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAAE,gBACtE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAAE,oBAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,aAC1B;AAAC,QACN,OAAO,CAAC,CAAC;AAAC,IACd,CAAC;AAAC,aAEc,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;AAAI,QACxD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;AAAC,QAC9H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;AAAE,YAAA,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAAC;AACxH,YAAH,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAAE,gBAAA,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAAE,oBAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AAAC,QACnJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAAC,IACnE,CAAC;AAAC,aAEc,OAAO,CAAC,UAAU,EAAE,SAAS;AAAI,QAC7C,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;AAAC,IAC1E,CAAC;AAAC,aAEc,UAAU,CAAC,WAAW,EAAE,aAAa;AAAI,QACrD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;AAAE,YAAA,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAAC,IACpI,CAAC;AAAC,aAEc,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;AAAI,QAC3D,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAAC,QAC7G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;AAAI,YACzD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;AAAE,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAAC,aAAC;AAAC,YAAA,OAAO,CAAC,EAAE;AAAE,gBAAA,MAAM,CAAC,CAAC,CAAC,CAAC;AAAC,aAAC,EAAE;AAAC,YAC5F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;AAAE,gBAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAAC,aAAC;AAAC,YAAA,OAAO,CAAC,EAAE;AAAE,gBAAA,MAAM,CAAC,CAAC,CAAC,CAAC;AAAC,aAAC,EAAE;AAAC,YAC/F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;AAAC,YAC/G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAAC,SAC1E,CAAC,CAAC;AAAC,IACR,CAAC;AAAC,aAEc,WAAW,CAAC,OAAO,EAAE,IAAI;AAAI,QACzC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AAAE,gBAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAAC,QAClH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAAC,QAC1J,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AAAC,QACnE,SAAS,IAAI,CAAC,EAAE;AAAI,YAChB,IAAI,CAAC;AAAE,gBAAA,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;AAAC,YAC/D,OAAO,CAAC;AAAE,gBAAA,IAAI;AAAE,oBACZ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;AAAE,wBAAA,OAAO,CAAC,CAAC;AAAC,oBAC9J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;AAAE,wBAAA,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AAAC,oBACzC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAAI,wBACb,KAAK,CAAC,CAAC;AAAC,wBAAA,KAAK,CAAC;AAAE,4BAAA,CAAC,GAAG,EAAE,CAAC;AAAC,4BAAA,MAAM;AAAC,wBAC/B,KAAK,CAAC;AAAE,4BAAA,CAAC,CAAC,KAAK,EAAE,CAAC;AAAC,4BAAA,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAAC,wBACzD,KAAK,CAAC;AAAE,4BAAA,CAAC,CAAC,KAAK,EAAE,CAAC;AAAC,4BAAA,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAAC,4BAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAAC,4BAAA,SAAS;AAAC,wBAClD,KAAK,CAAC;AAAE,4BAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAAC,4BAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAAC,4BAAA,SAAS;AAAC,wBAClD;AAAS,4BACL,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AAAE,gCAAA,CAAC,GAAG,CAAC,CAAC;AAAC,gCAAA,SAAS;AAAC,6BAAC;AAAC,4BAC7G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAAE,gCAAA,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAAC,gCAAA,MAAM;AAAC,6BAAC;AAAC,4BACvF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AAAE,gCAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,gCAAA,CAAC,GAAG,EAAE,CAAC;AAAC,gCAAA,MAAM;AAAC,6BAAC;AAAC,4BACtE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AAAE,gCAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,gCAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAAC,gCAAA,MAAM;AAAC,6BAAC;AAAC,4BACpE,IAAI,CAAC,CAAC,CAAC,CAAC;AAAE,gCAAA,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AAAC,4BACvB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAAC,4BAAA,SAAS;AAAC,qBAC/B;AAAC,oBACF,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAAC,iBAC/B;AAAC,gBAAA,OAAO,CAAC,EAAE;AAAE,oBAAA,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAC,oBAAA,CAAC,GAAG,CAAC,CAAC;AAAC,iBAAC;AAAC,wBAAQ;AAAE,oBAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAC,iBAAC;AAAC,YAC3D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;AAAE,gBAAA,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AAAC,YAAA,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAAC,SACrF;AAAC,IACN,CAAC;AAAC,IAEK,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AAAI,QAClE,IAAI,EAAE,KAAK,SAAS;AAAE,YAAA,EAAE,GAAG,CAAC,CAAC;AAAC,QAC9B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAAC,IAC1F,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AAAI,QAC1B,IAAI,EAAE,KAAK,SAAS;AAAE,YAAA,EAAE,GAAG,CAAC,CAAC;AAAC,QAC9B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,IAClB,CAAC,CAAC,CAAC;AAAC,aAEY,YAAY,CAAC,CAAC,EAAE,CAAC;AAAI,QACjC,KAAK,IAAI,CAAC,IAAI,CAAC;AAAE,YAAA,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAAE,gBAAA,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAAC,IACnH,CAAC;AAAC,aAEc,QAAQ,CAAC,CAAC;AAAI,QAC1B,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAAC,QAC/E,IAAI,CAAC;AAAE,YAAA,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAAC,QACzB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;AAAE,YAAA,OAAO;AAAE,gBAC5C,IAAI,EAAE;AAAc,oBAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;AAAE,wBAAA,CAAC,GAAG,KAAK,CAAC,CAAC;AAAC,oBACpC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;AAAC,iBAC5C;AAAC,aACL,CAAC;AAAC,QACH,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;AAAC,IAC5F,CAAC;AAAC,aAEc,MAAM,CAAC,CAAC,EAAE,CAAC;AAAI,QAC3B,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAAC,QAC5D,IAAI,CAAC,CAAC;AAAE,YAAA,OAAO,CAAC,CAAC;AAAC,QAClB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;AAAC,QAClC,IAAI;AAAE,YACF,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;AAAE,gBAAA,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAAC,SAC/E;AAAC,QACF,OAAO,KAAK,EAAE;AAAE,YAAA,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;AAAC,SAAC;AAAC,gBAChC;AAAE,YACN,IAAI;AAAE,gBACF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAAE,oBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAAC,aACrD;AAAC,oBACM;AAAE,gBAAA,IAAI,CAAC;AAAE,oBAAA,MAAM,CAAC,CAAC,KAAK,CAAC;AAAC,aAAC;AAAC,SACrC;AAAC,QACF,OAAO,EAAE,CAAC;AAAC,IACf,CAAC;AAAC,IAEF;AAAmB,aACH,QAAQ;AAAK,QACzB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;AAAE,YAChD,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,QAC1C,OAAO,EAAE,CAAC;AAAC,IACf,CAAC;AAAC,IAEF;AAAmB,aACH,cAAc;AAAK,QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AAAE,YAAA,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAAC,QACrF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;AAAE,YAC9C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;AAAE,gBAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,QACrB,OAAO,CAAC,CAAC;AAAC,IACd,CAAC;AAAC,aAEc,aAAa,CAAC,EAAE,EAAE,IAAI;AAAI,QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;AAAE,YAC/D,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAAC,QACrB,OAAO,EAAE,CAAC;AAAC,IACf,CAAC;AAAC,aAEc,OAAO,CAAC,CAAC;AAAI,QACzB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;AAAC,IAC1E,CAAC;AAAC,aAEc,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;AAAI,QAC/D,IAAI,CAAC,MAAM,CAAC,aAAa;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;AAAC,QACxF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;AAAC,QAC/D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAAC,QACvH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AAAE,YAAA,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AAAC,QAC3I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;AAAE,YAAA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAC,SAAC;AAAC,QAAA,OAAO,CAAC,EAAE;AAAE,YAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAAC,SAAC,EAAE;AAAC,QACnF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAAC,QACzH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;AAAC,QACnD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;AAAC,QACnD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;AAAE,YAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAAC,IACvF,CAAC;AAAC,aAEc,gBAAgB,CAAC,CAAC;AAAI,QAClC,IAAI,CAAC,EAAE,CAAC,CAAC;AAAC,QACV,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;AAAC,QAC7I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;AAAC,IACpJ,CAAC;AAAC,aAEc,aAAa,CAAC,CAAC;AAAI,QAC/B,IAAI,CAAC,MAAM,CAAC,aAAa;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;AAAC,QACxF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAAC,QACpC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAAC,QAClN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AAAC,QACjK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;AAAC,IACjI,CAAC;AAAC,aAEc,oBAAoB,CAAC,MAAM,EAAE,GAAG;AAAI,QAChD,IAAI,MAAM,CAAC,cAAc,EAAE;AAAE,YAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAAC,SAAC;AAAC,aAAK;AAAE,YAAA,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAAC,SAAC;AAAC,QAChH,OAAO,MAAM,CAAC;AAAC,IACnB,CAAC;AAAC,IAAD,CAAC;AAAC,IAEH,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;AAAI,QACvD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAC,IACzE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;AAAI,QAClB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAAC,IACtB,CAAC,CAAC;AAAC,aAEa,YAAY,CAAC,GAAG;AAAI,QAChC,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;AAAE,YAAA,OAAO,GAAG,CAAC;AAAC,QACvC,IAAI,MAAM,GAAG,EAAE,CAAC;AAAC,QACjB,IAAI,GAAG,IAAI,IAAI;AAAE,YAAA,KAAK,IAAI,CAAC,IAAI,GAAG;AAAE,gBAAA,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAAE,oBAAA,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAAC,QAC1I,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAAC,QACjC,OAAO,MAAM,CAAC;AAAC,IACnB,CAAC;AAAC,aAEc,eAAe,CAAC,GAAG;AAAI,QACnC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAAC,IAC7D,CAAC;AAAC,aAEc,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAAI,QAC/D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;AAAC,QAC9F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;AAAC,QACpL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAAC,IACnG,CAAC;AAAC,aAEc,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAAI,QACtE,IAAI,IAAI,KAAK,GAAG;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;AAAC,QACzE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;AAAC,QAC9F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;AAAC,QACnL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;AAAC,IAC/G;AAAE;AACF,IC3OA;AACA;AACI;AAGD;AAAQ,aAGK,eAAe,CAAC,IAAgB;AAAI,QAC1C,IAAA,UAAU,GAAwB,IAAI,WAA5B,EAAE,iBAAiB,GAAK,IAAI,kBAAT,CAAU;AACjD,QAAE,OAAO,CAAC,EAAE,UAAU,IAAI,iBAAiB,CAAC,CAAC;AAC7C,IAAA,CAAC;AACD,aACgB,SAAS,CAAC,MAAiB,EAAE,QAAqB;AAAI,QACpE,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9D,IAAA,CAAC;AACD,aACgB,WAAW,CAAC,KAAsB,EAAE,KAAa;AAAI,QACnE,OAAU,KAAK,SAAI,KAAO,CAAC;AAC7B,IAAA,CAAC;AACD,aACgB,MAAM,CAAC,GAAkB,EAAE,GAAW;AAAI,QACxD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;AACzC,YAAI,OAAO,GAAG,CAAC;AACf,SAAG;AACH,QAAE,OAAO,GAAG,CAAC;AACb,IAAA,CAAC;AACD,IACA;AACA;AACI;AACI;AACI;AAEA;AAAQ,aAAJ,eAAe,CAAC,YAA+B,EAAE,YAAyC;AAAI,QAA9E,6BAAA,EAAA,iBAA+B;AAAI,QAAF,6BAAA,EAAA,iBAAyC;AAAI,QAC5G,IAAM,cAAc,GAAG,IAAI,GAAG,CAAC,YAAY,KAAK,IAAI,GAAG,EAAE,GAAG,YAAY,CAAC,CAAC;AAC5E,QAAE,IAAM,WAAW,GAAkB,EAAE,CAAC;AACxC,QACE,SAAS,GAAG,CAAC,IAAkB,EAAE,MAAiC;AAAI,YAArC,uBAAA,EAAA,aAAiC;AAAI,YACpE,OAAO,IAAI,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAE,KAAK;AAAI,gBAClC,IAAM,GAAG,GAAW,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;AACxE,gBAAM,IAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAClD,gBAAM,QAAQ,CAAC,OAAO,aAAQ,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,IAAG,KAAK,KAAK,CAAC,EAAC,CAAC;AAC1E,gBAAM,QAAQ,CAAC,KAAK,aAAQ,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,IAAG,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC;AACpF;AACU;AACU,gBAAd,IAAM,WAAW,GAAgB;AACvC,oBAAQ,MAAM,QAAA;AACd,oBAAQ,GAAG,KAAA;AACX,oBAAQ,QAAQ,EAAE,EAAE;AACpB,oBAAQ,IAAI,EAAE,QAAQ;AACtB,oBAAQ,OAAO,YAAO,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,IAAG,KAAK,KAAK,CAAC,EAAC;AACjE,oBAAQ,KAAK,YAAO,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,IAAG,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;AAC3E,iBAAO,CAAC;AACR,gBACM,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpC;AAES,gBAAH,IAAI,YAAY,KAAK,IAAI,IAAI,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,UAAU,EAAE;AACzF,oBAAQ,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,EAAE,WAAW,CAAC,CAAC;AACzE,iBAAO;AAAC,qBAAK;AACb,oBAAQ,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;AAClC,iBAAO;AACP,gBACM,OAAO,WAAW,CAAC;AACzB,aAAK,CAAC,CAAC;AACP,SAAG;AACH,QACE,GAAG,CAAC,YAAY,CAAC,CAAC;AACpB,QAAE,OAAO,WAAW,CAAC;AACrB,IAAA;AACA;AAAC;AAAyD,QC1D1D;AACiB,YACf,oBAAe,GAAG,IAAI,CAAC;AACzB,YAAE,iBAAY,GAAG,CAAC,CAAC;AACnB,YACE,oBAAe,GAAY,KAAK,CAAC;AACnC,YAAE,eAAU,GAAY,KAAK,CAAC;AAC9B,YACE,cAAS,GAAiB,EAAE,CAAC;AAC/B,YAAE,kBAAa,GAAG,IAAIA,oBAAe,CAAe,EAAE,CAAC,CAAC;AACxD,YAAE,qBAAgB,GAAiB,EAAE,CAAC;AACtC,YAAE,qBAAgB,GAAiB,EAAE,CAAC;AACtC,YAAE,oBAAe,GAAiB,EAAE,CAAC;AACrC,YAAE,wBAAmB,GAAiB,EAAE,CAAC;AACzC,YAAE,oBAAe,GAAiB,EAAE,CAAC;AACrC,SA+fC;AACD;AAAY;AAAyD;AAAY,QA5f/E,oCAAQ,GAAR,UAAS,OAAqB;AAAI,YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AAC7B,YAAI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,YAAI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,YAAI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;AAClC,YAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,YAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,SAAG;AAEH,QAAE,2CAAe,GAAf,UAAgB,OAAqB,EAAE,YAAyC;AAAI,YAA7C,6BAAA,EAAA,iBAAyC;AAAI,YAClF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,GAAA,CAAC,CAAC,CAAC;AAC3F,SAAG;AAEH,QAAE,2CAAe,GAAf;AAAc,YACZ,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,+CAAmB,GAAnB;AAAc,YACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,8CAAkB,GAAlB;AAAc,YACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAG;AAEH,QAAE,kDAAsB,GAAtB;AAAc,YACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AAC9C,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,+CAAmB,GAAnB;AAAc,YACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,8CAAkB,GAAlB;AAAc,YACZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAG;AAEH,QAAE,+CAAmB,GAAnB,UAAoB,KAAkB;AAAI,YACxC,OAAO,KAAK,CAAC,KAAK,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,YAAY,UAAU,GAAA,CAAC,CAAC;AAC3D,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,2CAAe,GAAf,UAAgB,IAAgB;AAAI,YAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,yCAAa,GAAb,UAAc,IAAgB;AAAI,YAChC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7C,gBAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,oBACjC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE;AAChC;AACc,wBAAJ,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;AAC/B,qBAAS;AACT,iBAAO,CAAC,CAAC;AACT;AACU,gBAAJ,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACjC,aAAK;AACL,YAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACpD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,+CAAmB,GAAnB,UAAoB,IAAgB,EAAE,UAA2B;AAAI,YAA/B,2BAAA,EAAA,kBAA2B;AAAI,YACnE,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACxE,YAAI,IAAI,UAAU,EAAE;AACpB,gBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC3C,oBAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,iBAAO;AACP,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC3C,oBAAQ,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,iBAAO;AACP,aAAK;AACL,YAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC1B,gBAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AACpF,aAAK;AACL,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,kDAAsB,GAAtB,UAAuB,IAAgB;AAAI,YACzC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3E,YAAI,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC5C,gBAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1C,aAAK;AAAC,iBAAK,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAClD,gBAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC;AAC1F,aAAK;AACL,SAAG;AAEH,QAAE,8CAAkB,GAAlB,UAAmB,IAAgB;AAAI,YACrC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACvE,YAAI,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACxC,gBAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,aAAK;AAAC,iBAAK,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAC9C,gBAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC;AAClF,aAAK;AACL,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,4CAAgB,GAAhB,UAAiB,IAAsB;AAAI,YAA3C,iBAqCC;AACH,YAtCmB,qBAAA,EAAA,cAAsB;AAAI,YACzC,IAAI,eAAe,GAAiB,EAAE,CAAC;AAC3C,YAAI,QAAQ,IAAI;AAChB,gBAAM,KAAK,QAAQ;AACnB,oBAAQ,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAChD,oBAAQ,MAAM;AACd,gBAAM,KAAK,QAAQ;AACnB,oBAAQ,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAChD,oBAAQ,MAAM;AACd,gBAAM,KAAK,OAAO;AAClB,oBAAQ,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AAC/C,oBAAQ,MAAM;AACd,gBAAM,KAAK,OAAO;AAClB,oBAAQ,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AAC/C,oBAAQ,IAAM,UAAQ,GAAG,UAAC,IAAgB;AAAI,wBACpC,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAClD,wBAAU,IAAI,UAAU,EAAE;AAC1B,4BAAY,IAAI,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG,GAAA,CAAC,GAAG,CAAC,CAAC,EAAE;AACpF,gCAAc,OAAO,IAAI,CAAC;AAC1B,6BAAa;AAAC,iCAAK;AACnB,gCAAc,OAAO,UAAQ,CAAC,UAAU,CAAC,CAAC;AAC1C,6BAAa;AACb,yBAAW;AACX,wBAAU,OAAO,KAAK,CAAC;AACvB,qBAAS,CAAC;AACV;AACY,oBAAJ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACnC,wBAAU,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,UAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;AAC3E,qBAAS;AACT,oBAAQ,MAAM;AACd,gBAAM,KAAK,WAAW;AACtB,oBAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACnC,wBAAU,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACrD,qBAAS;AACT,oBAAQ,MAAM;AACd,aAAK;AACL,YAAI,OAAO,eAAe,CAAC;AAC3B,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,+CAAmB,GAAnB,UAAoB,IAAgB;AAAI,YACtC,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACxE,YAAI,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACzC,gBAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,aAAK;AAAC,iBAAK,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAC/C,gBAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7C,aAAK;AACL,SAAG;AAEH,QAAE,8CAAkB,GAAlB,UAAmB,IAAgB;AAAI,YACrC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACvE,YAAI,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACxC,gBAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,aAAK;AAAC,iBAAK,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAC9C,gBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5C,aAAK;AACL,SAAG;AAEH;AACM;AACM;AAEA;AAAY,QAAtB,6CAAiB,GAAjB,UAAkB,eAAgC;AAAI,YAAtD,iBAOC;AACH,YARoB,gCAAA,EAAA,uBAAgC;AAAI,YACpD,IAAI,eAAe,EAAE;AACzB,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAA,IAAI;AAAI,gBACnC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC1C,aAAK,CAAC,CAAC;AACP,SAAG;AAEH;AACM,QAAJ,mCAAO,GAAP,UAAQ,IAAgB,EAAE,eAAgC;AAAI,YAApC,gCAAA,EAAA,uBAAgC;AAAI,YAC5D,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACrC,YAAI,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;AAClC,gBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3B,gBAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACxC,aAAK;AACL,SAAG;AAEH;AACM;AACM;AACM;AAEA;AAAY,QAA5B,qCAAS,GAAT,UAAU,IAAgB;AAAI,YAC5B,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC5C,YAAI,IAAI,UAAU,EAAE;AACpB,gBAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;AACxC,oBAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,SAAS,CAAC,GAAA,CAAC,EAAE;AACrH,wBAAU,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;AACtC,wBAAU,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3C,qBAAS;AAAC,yBAAK,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,SAAS,GAAA,CAAC,EAAE;AAC9F,wBAAU,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;AACvC,wBAAU,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1C,qBAAS;AAAC,yBAAK;AACf,wBAAU,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;AACvC,wBAAU,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3C,qBAAS;AACT,iBAAO;AACP,gBAAM,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AAC1C,gBAAM,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;AAC9C,gBAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACjC,aAAK;AACL,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,uCAAW,GAAX,UAAY,IAAgB,EAAE,KAAc;AAAI,YAAhD,iBAUC;AACH,YAVI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;AAChC,gBAAM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,gBAAM,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACjC,gBAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACxC,gBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,oBACzB,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACnC,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,uCAAW,GAAX,UAAY,KAAmB;AAAI,YAAnC,iBAmBC;AACH;AAI+B,YAtB3B,IAAM,QAAQ,GAAG,UAAC,IAAgB;AAAI;AAEnC,gBAAD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AACpF;AACU,gBAAJ,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AACpF;AACU,gBAAJ,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAA,CAAC,CAAC;AAClF,gBAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACzB,oBAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;AAAI,wBAC7B,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC1B,qBAAS,CAAC,CAAC;AACX,iBAAO;AACP,aAAK,CAAC;AACN,YAAI,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,gBACjB,QAAQ,CAAC,CAAC,CAAC,CAAC;AAClB,aAAK,CAAC,CAAC;AACP,YAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACjD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,2CAAe,GAAf,UAAgB,IAAgB;AAAI,YAApC,iBASC;AACH,YATI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC;AACU,gBAAJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3B,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK;AAAI,oBAC7B,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACpC,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AAEH;AACM,QAAJ,0CAAc,GAAd,UAAe,IAAgB;AAAI;AAClB,YAAf,IAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC5C,YAAI,IAAI,UAAU,EAAE;AACpB,gBAAM,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;AACxC,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrB,aAAK;AACL;AAAkB,gBAAd,KAAoB,IAAA,KAAA,SAAA,IAAI,CAAC,QAAQ,CAAA,gBAAA,4BAAE;AACvC,oBADS,IAAM,KAAK,WAAA;AAAE,oBAChB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACjC,iBAAK;AACL;AAES;AACO;AACT;AAAsB;AACyC;AACrE;AAAsD;AAAc,SANlE;AAEH,QAAE,4CAAgB,GAAhB,UAAiB,KAAgB;AAAI,YAC3B,IAAA,OAAO,GAAK,KAAK,QAAV,CAAW;AAC9B;AACQ,YAAE,IAAA,KAA2B,KAAK,CAAC,MAAkB,CAAC,qBAAqB,EAAE,EAAzE,GAAG,SAAA,EAAE,MAAM,YAAA,EAAE,MAAM,YAAsD,CAAC;AACtF,YAAI,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC3E,YACI,IAAI,OAAO,IAAI,GAAG,GAAG,GAAG,EAAE;AAC9B,gBAAM,OAAO,CAAC,CAAC,CAAC;AAChB,aAAK;AAAC,iBAAK,IAAI,OAAO,IAAI,MAAM,GAAG,GAAG,EAAE;AACxC,gBAAM,OAAO,CAAC,CAAC;AACf,aAAK;AACL,YACI,OAAO,CAAC,CAAC;AACb,SAAG;AAEH;AACM;AACM;AAEA;AAAY,QAAtB,wCAAY,GAAZ,UAAa,UAAsB,EAAE,OAAoB;AAAI,YAA7D,iBA2CC;AACH,YA5CuC,wBAAA,EAAA,WAAmB,CAAC;AAAI,YAC3D,IAAI,CAAC,UAAU,IAAI,OAAO,GAAG,CAAC,EAAE;AACpC,gBAAM,OAAO;AACb,aAAK;AACL,YAAI,IAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;AAC/C,YAAI,IAAM,YAAY,GAAG,UAAU,CAAC,aAAa,EAAE,CAAC;AACpD,YAAI,IAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;AACjE;AACQ,YAAJ,IAAI,kBAAkB,EAAE;AAC5B,gBAAM,kBAAkB,CAAC,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,YAAY,CAAC,GAAG,GAAA,CAAC,CAAC;AAC7G,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,YAAY,CAAC,GAAG,GAAA,CAAC,CAAC;AACnF,aAAK;AACL,YAAI,QAAQ,OAAO;AACnB,gBAAM,KAAK,CAAC;AACZ,oBAAQ,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AACpD,oBAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACxC,oBAAQ,MAAM;AACd,gBAAM,KAAK,CAAC,CAAC,CAAC;AACd,gBAAM,KAAK,CAAC;AACZ,oBAAQ,IAAM,MAAM,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7C,oBAAQ,IAAI,YAAY,EAAE;AAC1B,wBAAU,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;AAC5G,wBAAU,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;AAC/D,wBAAU,IAAI,UAAU,EAAE;AAC1B,4BAAY,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AAC5C,yBAAW;AACX,qBAAS;AAAC,yBAAK;AACf,wBAAU,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;AAC1E;AACc,wBAAJ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACnE,wBAAU,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;AACxD,wBAAU,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAC3D,qBAAS;AACT,oBAAQ,MAAM;AACd,aAAK;AACL;AACQ,YAAJ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,KAAK;AAAI,gBAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;AAC9B,oBAAQ,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC;AACpC,iBAAO;AACP,gBAAM,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAClC,aAAK,CAAC,CAAC;AACP,SAAG;AAEH;AACM;AACM;AAEJ;AAAgB;AAGd;AAAoB;AAAY,QAAxC,uCAAW,GAAX,UAAY,SAAiB,EAAE,IAAuB,EAAE,KAAoC;AAAI,YAC9F,IAAM,aAAa,GAAsB;AAC7C,gBAAM,SAAS,EAAE,SAAS;AAC1B,gBAAM,IAAI,EAAE,IAAI;AAChB,gBAAM,KAAK,EAAE,KAAK;AAClB,aAAK,CAAC;AACN,YAAI,QAAQ,SAAS;AACrB,gBAAM,KAAK,WAAW,CAAC;AACvB,gBAAM,KAAK,WAAW,CAAC;AACvB,gBAAM,KAAK,UAAU,CAAC;AACtB,gBAAM,KAAK,WAAW,CAAC;AACvB,gBAAM,KAAK,MAAM,CAAC;AAClB,gBAAM,KAAK,SAAS;AACpB,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AAC3E,oBAAQ,MAAM;AACd,gBAAM,KAAK,OAAO,CAAC;AACnB,gBAAM,KAAK,UAAU;AACrB,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAC9E,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACvE,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,EAAE,CAAC,CAAC;AACtF,oBAAQ,MAAM;AACd,gBAAM,KAAK,OAAO;AAClB,oBAAQ,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1D,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,WAAW,EAAE,eAAe,EAAE,CAAC,CAAC;AACvE,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;AACjE,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,EAAE,CAAC,CAAC;AAChF,oBAAQ,MAAM;AACd,gBAAM,KAAK,QAAQ;AACnB,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;AACjF,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;AAC3E,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,EAAE,CAAC,CAAC;AAC1F,oBAAQ,MAAM;AACd,gBAAM,KAAK,QAAQ;AACnB,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACvE,oBAAQ,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAA,CAAC,EAAE,CAAC,CAAC;AACtF,oBAAQ,MAAM;AACd,aAAK;AACL,YAAI,OAAO,aAAa,CAAC;AACzB,SAAG;AAEH;AACM;AAGD;AAAY,QAAf,2CAAe,GAAf,UAAgB,IAAkB,EAAE,GAAW;AAAI,YACjD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,GAAG,GAAA,CAAC,CAAC;AAC9C,SAAG;AAEH;AACM;AACM;AAEX;AAAuB;AAEA;AAAY,QAAlC,wCAAY,GAAZ,UAAa,IAA4B,EAAE,aAAsB;AAAI,YACnE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC9B,YAAI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;AAClC,YAAI,IAAM,IAAI,GAAG,UAAC,KAAmB;AAAI,gBACnC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;AAAI,oBACpB,IAAI,IAAI,KAAK,IAAI,EAAE;AAC3B;AACc,wBAAJ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AACjD,qBAAS;AAAC,yBAAK;AACf,wBAAU,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,EAAE;AAC/C,4BAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAClC,4BAAY,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACvC,yBAAW;AAAC,6BAAK;AACjB,4BAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,4BAAY,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACvC,yBAAW;AACX,qBAAS;AACT,oBAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,wBAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,qBAAS;AACT,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC;AACN,YAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzB,YAAI,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;AAC1C,SAAG;AAEH,QAAE,+CAAmB,GAAnB,UAAoB,IAAiC;AAAI,YAAzD,iBAeC;AACH,YAhBsB,qBAAA,EAAA,SAAiC;AAAI,YACvD,IAAM,cAAc,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAC9D,YAAI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,YAAI,IAAM,IAAI,GAAG,UAAC,KAAmB;AAAI,gBACnC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;AAAI,oBACpB,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC;AACpG,oBAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;AAC7B,wBAAU,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACzC,qBAAS;AACT,oBAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,wBAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9B,qBAAS;AACT,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC;AACN,YAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzB,SAAG;AAEH,QAAE,+CAAmB,GAAnB,UAAoB,IAAqB,EAAE,OAAgB;AAAI,YAA/D,iBAuBC;AACH,YAvBI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,QAAC,IAAI,CAAC,UAAU,GAAG,KAAK,IAAC,CAAC,CAAC;AACrE,YAAI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,YAAI,IAAM,IAAI,GAAG,UAAC,KAAmB;AAAI,gBACnC,OAAO,KAAK,CAAC,KAAK,CAAC,UAAA,IAAI;AAAI,oBACzB,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;AACvC,wBAAU,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACjC,wBAAU,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACzC,wBAAU,IAAI,CAAC,OAAO,EAAE;AACxB;AACgB,4BAAJ,OAAO,KAAK,CAAC;AACzB,yBAAW;AACX,qBAAS;AAAC,yBAAK;AACf,wBAAU,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAClC,qBAAS;AACT,oBAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC;AACc,wBAAJ,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,qBAAS;AACT,oBAAQ,OAAO,IAAI,CAAC;AACpB,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC;AACN,YAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzB,SAAG;AAEH;AACM;AACM;AAEA;AAAY,QAAtB,uDAA2B,GAA3B,UAA4B,IAAgB;AAAI,YAAhD,iBAYC;AACH,YAZI,IAAM,IAAI,GAAG,UAAC,CAAoB;AAAI,gBACpC,IAAI,CAAC,EAAE;AACb,oBAAQ,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;AAC1B,oBAAQ,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC5B,oBAAQ,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACpC,oBAAQ,IAAI,CAAC,CAAC,aAAa,EAAE,EAAE;AAC/B,wBAAU,OAAO,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC;AACzC,qBAAS;AACT,iBAAO;AACP,aAAK,CAAC;AACN,YAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AAC/B,SAAG;;;;;gDACH;AAAC;AACgC,SA9gB3B;AAAC;AAAC,ICdR;4CDaCC,eAAU,3DCZX;AACI;AAGD;AAAQ,QAIE,6BAA6B,GAAG,IAAIC,mBAAc,CAAoB,mBAAmB;AACtG;AAAC,ICVD;AACA;AACI;AAGD;AAAQ;AACJ,QAIL,oBAAmB,aAAgC;AAAI,YAApC,kBAAa,GAAb,aAAa,CAAmB;AAAC,SAAG;AACzD;AAEK;AAEA;AAAY,QAAf,oCAAe,GAAf,UAAgB,KAAkB;AAAI,YAAtC,iBAYC;AACH,YAZI,IAAI,KAAK,GAAiB,EAAE,CAAC;AACjC,YAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACxD;AACU,gBAAJ,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,GAAA,CAAC,CAAC;AAChF,aAAK;AAAC,iBAAK;AACX,gBAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAC,IAAgB;AAAI,oBACrC,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC;AAC1C,oBAAQ,OAAO,IAAI,CAAC;AACpB,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,YAAI,OAAO,KAAK,CAAC;AACjB,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,iCAAY,GAAZ;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;AACxC,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,qCAAgB,GAAhB,UAAiB,GAAW;AAAI;AACtB,YACR,IAAM,KAAK,GAAiB,EAAE,CAAC;AACnC,YAAI,IAAM,OAAO,GAAG,UAAC,IAAgB;AAAI,gBACnC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,gBAAM,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,oBAC9B,OAAO,CAAC,CAAC,CAAC,CAAC;AACnB,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC;AACN,YAAI,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;AAAI,gBAC/B,OAAO,CAAC,CAAC,CAAC,CAAC;AACjB,aAAK,CAAC,CAAC;AACP,YAAI,OAAO,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,KAAK,GAAG,GAAA,CAAC,IAAI,IAAI,CAAC;AAClD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,uCAAkB,GAAlB;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;AACnD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,wCAAmB,GAAnB;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;AACpD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,2CAAsB,GAAtB;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;AACvD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,wCAAmB,GAAnB;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;AACpD,SAAG;AAEH;AACM;AAEA;AAAY,QAAhB,uCAAkB,GAAlB;AAAc,YACZ,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;AACnD,SAAG;AACF,yBAAA;AACA,KADA;AACG;AAAC,ICzFL;AACA;AACI;AAGD;AAAQ;AAAC,ICLZ;AACA;AAEA;AACO;AAAC;AACO;AAAmD;AAA2E;AAAqC;AAA+C;AAA6B;AAAuC;AAA+C;AAAmC;AAAC;AAAmE;AAAC;AAAM","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNodeBaseComponent } from './nz-tree-base.definitions';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport type NzTreeNodeKey = string | number;\n\nexport interface FlattenNode {\n  parent: FlattenNode | null;\n  children: FlattenNode[];\n  pos: string;\n  data: NzTreeNode;\n  isStart: boolean[];\n  isEnd: boolean[];\n}\n\nexport interface NzTreeNodeOptions {\n  title: string;\n  key: string;\n  icon?: string;\n  isLeaf?: boolean;\n  checked?: boolean;\n  selected?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  disableCheckbox?: boolean;\n  expanded?: boolean;\n  children?: NzTreeNodeOptions[];\n\n  [key: string]: NzSafeAny;\n}\n\nexport class NzTreeNode {\n  private _title: string = '';\n  key!: string;\n  level: number = 0;\n  origin!: NzTreeNodeOptions;\n  // Parent Node\n  parentNode: NzTreeNode | null = null;\n  private _icon: string = '';\n  private _children: NzTreeNode[] = [];\n  private _isLeaf: boolean = false;\n  private _isChecked: boolean = false;\n  private _isSelectable: boolean = false;\n  private _isDisabled: boolean = false;\n  private _isDisableCheckbox: boolean = false;\n  private _isExpanded: boolean = false;\n  private _isHalfChecked: boolean = false;\n  private _isSelected: boolean = false;\n  private _isLoading: boolean = false;\n  canHide: boolean = false;\n  isMatched: boolean = false;\n\n  service: NzTreeBaseService | null = null;\n  component!: NzTreeNodeBaseComponent;\n\n  /** New added in Tree for easy data access */\n  isStart?: boolean[];\n  isEnd?: boolean[];\n\n  get treeService(): NzTreeBaseService | null {\n    return this.service || (this.parentNode && this.parentNode.treeService);\n  }\n\n  /**\n   * Init nzTreeNode\n   * @param option: user's input\n   * @param parent\n   * @param service: base nzTreeService\n   */\n  constructor(option: NzTreeNodeOptions | NzTreeNode, parent: NzTreeNode | null = null, service: NzTreeBaseService | null = null) {\n    if (option instanceof NzTreeNode) {\n      return option;\n    }\n    this.service = service || null;\n    this.origin = option;\n    this.key = option.key;\n    this.parentNode = parent;\n    this._title = option.title || '---';\n    this._icon = option.icon || '';\n    this._isLeaf = option.isLeaf || false;\n    this._children = [];\n    // option params\n    this._isChecked = option.checked || false;\n    this._isSelectable = option.disabled || option.selectable !== false;\n    this._isDisabled = option.disabled || false;\n    this._isDisableCheckbox = option.disableCheckbox || false;\n    this._isExpanded = option.isLeaf ? false : option.expanded || false;\n    this._isHalfChecked = false;\n    this._isSelected = (!option.disabled && option.selected) || false;\n    this._isLoading = false;\n    this.isMatched = false;\n\n    /**\n     * parent's checked status will affect children while initializing\n     */\n    if (parent) {\n      this.level = parent.level + 1;\n    } else {\n      this.level = 0;\n    }\n    if (typeof option.children !== 'undefined' && option.children !== null) {\n      option.children.forEach(nodeOptions => {\n        const s = this.treeService;\n        if (s && !s.isCheckStrictly && option.checked && !option.disabled && !nodeOptions.disabled && !nodeOptions.disableCheckbox) {\n          nodeOptions.checked = option.checked;\n        }\n        this._children.push(new NzTreeNode(nodeOptions, this));\n      });\n    }\n  }\n\n  /**\n   * auto generate\n   * get\n   * set\n   */\n  get title(): string {\n    return this._title;\n  }\n\n  set title(value: string) {\n    this._title = value;\n    this.update();\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(value: string) {\n    this._icon = value;\n    this.update();\n  }\n\n  get children(): NzTreeNode[] {\n    return this._children;\n  }\n\n  set children(value: NzTreeNode[]) {\n    this._children = value;\n    this.update();\n  }\n\n  get isLeaf(): boolean {\n    return this._isLeaf;\n  }\n\n  set isLeaf(value: boolean) {\n    this._isLeaf = value;\n    this.update();\n  }\n\n  get isChecked(): boolean {\n    return this._isChecked;\n  }\n\n  set isChecked(value: boolean) {\n    this._isChecked = value;\n    this.origin.checked = value;\n    this.afterValueChange('isChecked');\n  }\n\n  get isHalfChecked(): boolean {\n    return this._isHalfChecked;\n  }\n\n  set isHalfChecked(value: boolean) {\n    this._isHalfChecked = value;\n    this.afterValueChange('isHalfChecked');\n  }\n\n  get isSelectable(): boolean {\n    return this._isSelectable;\n  }\n\n  set isSelectable(value: boolean) {\n    this._isSelectable = value;\n    this.update();\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this.update();\n  }\n\n  get isDisableCheckbox(): boolean {\n    return this._isDisableCheckbox;\n  }\n\n  set isDisableCheckbox(value: boolean) {\n    this._isDisableCheckbox = value;\n    this.update();\n  }\n\n  get isExpanded(): boolean {\n    return this._isExpanded;\n  }\n\n  set isExpanded(value: boolean) {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n    this.afterValueChange('reRender');\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  set isSelected(value: boolean) {\n    this._isSelected = value;\n    this.origin.selected = value;\n    this.afterValueChange('isSelected');\n  }\n\n  get isLoading(): boolean {\n    return this._isLoading;\n  }\n\n  set isLoading(value: boolean) {\n    this._isLoading = value;\n    this.update();\n  }\n\n  public setSyncChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.setChecked(checked, halfChecked);\n    if (this.treeService && !this.treeService.isCheckStrictly) {\n      this.treeService.conduct(this);\n    }\n  }\n\n  public setChecked(checked: boolean = false, halfChecked: boolean = false): void {\n    this.origin.checked = checked;\n    this.isChecked = checked;\n    this.isHalfChecked = halfChecked;\n  }\n\n  public setExpanded(value: boolean): void {\n    this._isExpanded = value;\n    this.origin.expanded = value;\n    this.afterValueChange('isExpanded');\n  }\n\n  public getParentNode(): NzTreeNode | null {\n    return this.parentNode;\n  }\n\n  public getChildren(): NzTreeNode[] {\n    return this.children;\n  }\n\n  /**\n   * Support appending child nodes by position. Leaf node cannot be appended.\n   */\n  public addChildren(children: NzSafeAny[], childPos: number = -1): void {\n    if (!this.isLeaf) {\n      children.forEach(node => {\n        const refreshLevel = (n: NzTreeNode) => {\n          n.getChildren().forEach(c => {\n            c.level = c.getParentNode()!.level + 1;\n            // flush origin\n            c.origin.level = c.level;\n            refreshLevel(c);\n          });\n        };\n        let child = node;\n        if (child instanceof NzTreeNode) {\n          child.parentNode = this;\n        } else {\n          child = new NzTreeNode(node, this);\n        }\n        child.level = this.level + 1;\n        child.origin.level = child.level;\n        refreshLevel(child);\n        try {\n          childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n          // flush origin\n        } catch (e) {}\n      });\n      this.origin.children = this.getChildren().map(v => v.origin);\n      // remove loading state\n      this.isLoading = false;\n    }\n    this.afterValueChange('addChildren');\n    this.afterValueChange('reRender');\n  }\n\n  public clearChildren(): void {\n    // refresh checked state\n    this.afterValueChange('clearChildren');\n    this.children = [];\n    this.origin.children = [];\n    this.afterValueChange('reRender');\n  }\n\n  public remove(): void {\n    const parentNode = this.getParentNode();\n    if (parentNode) {\n      parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n      parentNode.origin.children = parentNode.origin.children!.filter(v => v.key !== this.key);\n      this.afterValueChange('remove');\n      this.afterValueChange('reRender');\n    }\n  }\n\n  public afterValueChange(key: string): void {\n    if (this.treeService) {\n      switch (key) {\n        case 'isChecked':\n          this.treeService.setCheckedNodeList(this);\n          break;\n        case 'isHalfChecked':\n          this.treeService.setHalfCheckedNodeList(this);\n          break;\n        case 'isExpanded':\n          this.treeService.setExpandedNodeList(this);\n          break;\n        case 'isSelected':\n          this.treeService.setNodeActive(this);\n          break;\n        case 'clearChildren':\n          this.treeService.afterRemove(this.getChildren());\n          break;\n        case 'remove':\n          this.treeService.afterRemove([this]);\n          break;\n        case 'reRender':\n          this.treeService.flattenTreeData(\n            this.treeService.rootNodes,\n            this.treeService.getExpandedNodeList().map(v => v.key!)\n          );\n          break;\n      }\n    }\n    this.update();\n  }\n\n  public update(): void {\n    if (this.component) {\n      this.component.markForCheck();\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { FlattenNode, NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\n\nexport function isCheckDisabled(node: NzTreeNode): boolean {\n  const { isDisabled, isDisableCheckbox } = node;\n  return !!(isDisabled || isDisableCheckbox);\n}\n\nexport function isInArray(needle: NzSafeAny, haystack: NzSafeAny[]): boolean {\n  return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\n\nexport function getPosition(level: string | number, index: number): string {\n  return `${level}-${index}`;\n}\n\nexport function getKey(key: NzTreeNodeKey, pos: string): NzTreeNodeKey {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\n\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nexport function flattenTreeData(treeNodeList: NzTreeNode[] = [], expandedKeys: NzTreeNodeKey[] | true = []): FlattenNode[] {\n  const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  const flattenList: FlattenNode[] = [];\n\n  function dig(list: NzTreeNode[], parent: FlattenNode | null = null): FlattenNode[] {\n    return list.map((treeNode, index) => {\n      const pos: string = getPosition(parent ? parent.pos : '0', index);\n      const mergedKey = getKey(treeNode.key, pos);\n      treeNode.isStart = [...(parent ? parent.isStart : []), index === 0];\n      treeNode.isEnd = [...(parent ? parent.isEnd : []), index === list.length - 1];\n      // Add FlattenDataNode into list\n      // TODO: only need data here.\n      const flattenNode: FlattenNode = {\n        parent,\n        pos,\n        children: [],\n        data: treeNode,\n        isStart: [...(parent ? parent.isStart : []), index === 0],\n        isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n      };\n\n      flattenList.push(flattenNode);\n\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey) || treeNode.isExpanded) {\n        flattenNode.children = dig(treeNode.children || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n\n      return flattenNode;\n    });\n  }\n\n  dig(treeNodeList);\n  return flattenList;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { NzTreeNode, NzTreeNodeKey } from './nz-tree-base-node';\nimport { flattenTreeData, isCheckDisabled, isInArray } from './nz-tree-base-util';\nimport { NzFormatEmitEvent } from './nz-tree-base.definitions';\n\n@Injectable()\nexport class NzTreeBaseService {\n  DRAG_SIDE_RANGE = 0.25;\n  DRAG_MIN_GAP = 2;\n\n  isCheckStrictly: boolean = false;\n  isMultiple: boolean = false;\n  selectedNode!: NzTreeNode;\n  rootNodes: NzTreeNode[] = [];\n  flattenNodes$ = new BehaviorSubject<NzTreeNode[]>([]);\n  selectedNodeList: NzTreeNode[] = [];\n  expandedNodeList: NzTreeNode[] = [];\n  checkedNodeList: NzTreeNode[] = [];\n  halfCheckedNodeList: NzTreeNode[] = [];\n  matchedNodeList: NzTreeNode[] = [];\n\n  /**\n   * reset tree nodes will clear default node list\n   */\n  initTree(nzNodes: NzTreeNode[]): void {\n    this.rootNodes = nzNodes;\n    this.expandedNodeList = [];\n    this.selectedNodeList = [];\n    this.halfCheckedNodeList = [];\n    this.checkedNodeList = [];\n    this.matchedNodeList = [];\n  }\n\n  flattenTreeData(nzNodes: NzTreeNode[], expandedKeys: NzTreeNodeKey[] | true = []): void {\n    this.flattenNodes$.next(flattenTreeData(nzNodes, expandedKeys).map(item => item.data));\n  }\n\n  getSelectedNode(): NzTreeNode | null {\n    return this.selectedNode;\n  }\n\n  /**\n   * get some list\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('select');\n  }\n\n  /**\n   * return checked nodes\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('check');\n  }\n\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('halfCheck');\n  }\n\n  /**\n   * return expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('expand');\n  }\n\n  /**\n   * return search matched nodes\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.conductNodeState('match');\n  }\n\n  isArrayOfNzTreeNode(value: NzSafeAny[]): boolean {\n    return value.every(item => item instanceof NzTreeNode);\n  }\n\n  /**\n   * set drag node\n   */\n  setSelectedNode(node: NzTreeNode): void {\n    this.selectedNode = node;\n  }\n\n  /**\n   * set node selected status\n   */\n  setNodeActive(node: NzTreeNode): void {\n    if (!this.isMultiple && node.isSelected) {\n      this.selectedNodeList.forEach(n => {\n        if (node.key !== n.key) {\n          // reset other nodes\n          n.isSelected = false;\n        }\n      });\n      // single mode: remove pre node\n      this.selectedNodeList = [];\n    }\n    this.setSelectedNodeList(node, this.isMultiple);\n  }\n\n  /**\n   * add or remove node to selectedNodeList\n   */\n  setSelectedNodeList(node: NzTreeNode, isMultiple: boolean = false): void {\n    const index = this.getIndexOfArray(this.selectedNodeList, node.key);\n    if (isMultiple) {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList.push(node);\n      }\n    } else {\n      if (node.isSelected && index === -1) {\n        this.selectedNodeList = [node];\n      }\n    }\n    if (!node.isSelected) {\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n    }\n  }\n\n  /**\n   * merge checked nodes\n   */\n  setHalfCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.halfCheckedNodeList, node.key);\n    if (node.isHalfChecked && index === -1) {\n      this.halfCheckedNodeList.push(node);\n    } else if (!node.isHalfChecked && index > -1) {\n      this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  setCheckedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.checkedNodeList, node.key);\n    if (node.isChecked && index === -1) {\n      this.checkedNodeList.push(node);\n    } else if (!node.isChecked && index > -1) {\n      this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n    }\n  }\n\n  /**\n   * conduct checked/selected/expanded keys\n   */\n  conductNodeState(type: string = 'check'): NzTreeNode[] {\n    let resultNodesList: NzTreeNode[] = [];\n    switch (type) {\n      case 'select':\n        resultNodesList = this.selectedNodeList;\n        break;\n      case 'expand':\n        resultNodesList = this.expandedNodeList;\n        break;\n      case 'match':\n        resultNodesList = this.matchedNodeList;\n        break;\n      case 'check':\n        resultNodesList = this.checkedNodeList;\n        const isIgnore = (node: NzTreeNode): boolean => {\n          const parentNode = node.getParentNode();\n          if (parentNode) {\n            if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n              return true;\n            } else {\n              return isIgnore(parentNode);\n            }\n          }\n          return false;\n        };\n        // merge checked\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n        }\n        break;\n      case 'halfCheck':\n        if (!this.isCheckStrictly) {\n          resultNodesList = this.halfCheckedNodeList;\n        }\n        break;\n    }\n    return resultNodesList;\n  }\n\n  /**\n   * set expanded nodes\n   */\n  setExpandedNodeList(node: NzTreeNode): void {\n    if (node.isLeaf) {\n      return;\n    }\n    const index = this.getIndexOfArray(this.expandedNodeList, node.key);\n    if (node.isExpanded && index === -1) {\n      this.expandedNodeList.push(node);\n    } else if (!node.isExpanded && index > -1) {\n      this.expandedNodeList.splice(index, 1);\n    }\n  }\n\n  setMatchedNodeList(node: NzTreeNode): void {\n    const index = this.getIndexOfArray(this.matchedNodeList, node.key);\n    if (node.isMatched && index === -1) {\n      this.matchedNodeList.push(node);\n    } else if (!node.isMatched && index > -1) {\n      this.matchedNodeList.splice(index, 1);\n    }\n  }\n\n  /**\n   * check state\n   * @param isCheckStrictly\n   */\n  refreshCheckState(isCheckStrictly: boolean = false): void {\n    if (isCheckStrictly) {\n      return;\n    }\n    this.checkedNodeList.forEach(node => {\n      this.conduct(node, isCheckStrictly);\n    });\n  }\n\n  // reset other node checked state based current node\n  conduct(node: NzTreeNode, isCheckStrictly: boolean = false): void {\n    const isChecked = node.isChecked;\n    if (node && !isCheckStrictly) {\n      this.conductUp(node);\n      this.conductDown(node, isChecked);\n    }\n  }\n\n  /**\n   * 1、children half checked\n   * 2、children all checked, parent checked\n   * 3、no children checked\n   */\n  conductUp(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      if (!isCheckDisabled(parentNode)) {\n        if (parentNode.children.every(child => isCheckDisabled(child) || (!child.isHalfChecked && child.isChecked))) {\n          parentNode.isChecked = true;\n          parentNode.isHalfChecked = false;\n        } else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = true;\n        } else {\n          parentNode.isChecked = false;\n          parentNode.isHalfChecked = false;\n        }\n      }\n      this.setCheckedNodeList(parentNode);\n      this.setHalfCheckedNodeList(parentNode);\n      this.conductUp(parentNode);\n    }\n  }\n\n  /**\n   * reset child check state\n   */\n  conductDown(node: NzTreeNode, value: boolean): void {\n    if (!isCheckDisabled(node)) {\n      node.isChecked = value;\n      node.isHalfChecked = false;\n      this.setCheckedNodeList(node);\n      this.setHalfCheckedNodeList(node);\n      node.children.forEach(n => {\n        this.conductDown(n, value);\n      });\n    }\n  }\n\n  /**\n   * flush after delete node\n   */\n  afterRemove(nodes: NzTreeNode[]): void {\n    // to reset selectedNodeList & expandedNodeList\n    const loopNode = (node: NzTreeNode) => {\n      // remove selected node\n      this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n      // remove expanded node\n      this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n      // remove checked node\n      this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n      if (node.children) {\n        node.children.forEach(child => {\n          loopNode(child);\n        });\n      }\n    };\n    nodes.forEach(n => {\n      loopNode(n);\n    });\n    this.refreshCheckState(this.isCheckStrictly);\n  }\n\n  /**\n   * drag event\n   */\n  refreshDragNode(node: NzTreeNode): void {\n    if (node.children.length === 0) {\n      // until root\n      this.conductUp(node);\n    } else {\n      node.children.forEach(child => {\n        this.refreshDragNode(child);\n      });\n    }\n  }\n\n  // reset node level\n  resetNodeLevel(node: NzTreeNode): void {\n    const parentNode = node.getParentNode();\n    if (parentNode) {\n      node.level = parentNode.level + 1;\n    } else {\n      node.level = 0;\n    }\n    for (const child of node.children) {\n      this.resetNodeLevel(child);\n    }\n  }\n\n  calcDropPosition(event: DragEvent): number {\n    const { clientY } = event;\n    // to fix firefox undefined\n    const { top, bottom, height } = (event.target as Element).getBoundingClientRect();\n    const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n\n    if (clientY <= top + des) {\n      return -1;\n    } else if (clientY >= bottom - des) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  /**\n   * drop\n   * 0: inner -1: pre 1: next\n   */\n  dropAndApply(targetNode: NzTreeNode, dragPos: number = -1): void {\n    if (!targetNode || dragPos > 1) {\n      return;\n    }\n    const treeService = targetNode.treeService;\n    const targetParent = targetNode.getParentNode();\n    const isSelectedRootNode = this.selectedNode.getParentNode();\n    // remove the dragNode\n    if (isSelectedRootNode) {\n      isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n    } else {\n      this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n    }\n    switch (dragPos) {\n      case 0:\n        targetNode.addChildren([this.selectedNode]);\n        this.resetNodeLevel(targetNode);\n        break;\n      case -1:\n      case 1:\n        const tIndex = dragPos === 1 ? 1 : 0;\n        if (targetParent) {\n          targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n          const parentNode = this.selectedNode.getParentNode();\n          if (parentNode) {\n            this.resetNodeLevel(parentNode);\n          }\n        } else {\n          const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n          // Insert root node.\n          this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n          this.rootNodes[targetIndex].parentNode = null;\n          this.resetNodeLevel(this.rootNodes[targetIndex]);\n        }\n        break;\n    }\n    // flush all nodes\n    this.rootNodes.forEach(child => {\n      if (!child.treeService) {\n        child.service = treeService;\n      }\n      this.refreshDragNode(child);\n    });\n  }\n\n  /**\n   * emit Structure\n   * eventName\n   * node\n   * event: MouseEvent / DragEvent\n   * dragNode\n   */\n  formatEvent(eventName: string, node: NzTreeNode | null, event: MouseEvent | DragEvent | null): NzFormatEmitEvent {\n    const emitStructure: NzFormatEmitEvent = {\n      eventName: eventName,\n      node: node,\n      event: event\n    };\n    switch (eventName) {\n      case 'dragstart':\n      case 'dragenter':\n      case 'dragover':\n      case 'dragleave':\n      case 'drop':\n      case 'dragend':\n        Object.assign(emitStructure, { dragNode: this.getSelectedNode() });\n        break;\n      case 'click':\n      case 'dblclick':\n        Object.assign(emitStructure, { selectedKeys: this.selectedNodeList });\n        Object.assign(emitStructure, { nodes: this.selectedNodeList });\n        Object.assign(emitStructure, { keys: this.selectedNodeList.map(n => n.key) });\n        break;\n      case 'check':\n        const checkedNodeList = this.getCheckedNodeList();\n        Object.assign(emitStructure, { checkedKeys: checkedNodeList });\n        Object.assign(emitStructure, { nodes: checkedNodeList });\n        Object.assign(emitStructure, { keys: checkedNodeList.map(n => n.key) });\n        break;\n      case 'search':\n        Object.assign(emitStructure, { matchedKeys: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { nodes: this.getMatchedNodeList() });\n        Object.assign(emitStructure, { keys: this.getMatchedNodeList().map(n => n.key) });\n        break;\n      case 'expand':\n        Object.assign(emitStructure, { nodes: this.expandedNodeList });\n        Object.assign(emitStructure, { keys: this.expandedNodeList.map(n => n.key) });\n        break;\n    }\n    return emitStructure;\n  }\n\n  /**\n   * New functions for flatten nodes\n   */\n\n  getIndexOfArray(list: NzTreeNode[], key: string): number {\n    return list.findIndex(v => v.key === key);\n  }\n\n  /**\n   * Render by nzCheckedKeys\n   * When keys equals null, just render with checkStrictly\n   * @param keys\n   * @param checkStrictly\n   */\n  conductCheck(keys: NzTreeNodeKey[] | null, checkStrictly: boolean): void {\n    this.checkedNodeList = [];\n    this.halfCheckedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        if (keys === null) {\n          // render tree if no default checked keys found\n          node.isChecked = !!node.origin.checked;\n        } else {\n          if (isInArray(node.key, keys || [])) {\n            node.isChecked = true;\n            node.isHalfChecked = false;\n          } else {\n            node.isChecked = false;\n            node.isHalfChecked = false;\n          }\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n    this.refreshCheckState(checkStrictly);\n  }\n\n  conductExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    const expandedKeySet = new Set(keys === true ? [] : keys);\n    this.expandedNodeList = [];\n    const calc = (nodes: NzTreeNode[]) => {\n      nodes.forEach(node => {\n        node.setExpanded(keys === true || expandedKeySet.has(node.key) || node.isExpanded === true);\n        if (node.isExpanded) {\n          this.setExpandedNodeList(node);\n        }\n        if (node.children.length > 0) {\n          calc(node.children);\n        }\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  conductSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.selectedNodeList.forEach(node => (node.isSelected = false));\n    this.selectedNodeList = [];\n    const calc = (nodes: NzTreeNode[]): boolean => {\n      return nodes.every(node => {\n        if (isInArray(node.key, keys)) {\n          node.isSelected = true;\n          this.setSelectedNodeList(node);\n          if (!isMulti) {\n            // if not support multi select\n            return false;\n          }\n        } else {\n          node.isSelected = false;\n        }\n        if (node.children.length > 0) {\n          // Recursion\n          return calc(node.children);\n        }\n        return true;\n      });\n    };\n    calc(this.rootNodes);\n  }\n\n  /**\n   * Expand parent nodes by child node\n   * @param node\n   */\n  expandNodeAllParentBySearch(node: NzTreeNode): void {\n    const calc = (n: NzTreeNode | null): void => {\n      if (n) {\n        n.canHide = false;\n        n.setExpanded(true);\n        this.setExpandedNodeList(n);\n        if (n.getParentNode()) {\n          return calc(n.getParentNode());\n        }\n      }\n    };\n    calc(node.getParentNode());\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport const NzTreeHigherOrderServiceToken = new InjectionToken<NzTreeBaseService>('NzTreeHigherOrder');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeNode } from './nz-tree-base-node';\nimport { NzTreeBaseService } from './nz-tree-base.service';\n\nexport class NzTreeBase {\n  constructor(public nzTreeService: NzTreeBaseService) {}\n\n  /**\n   * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n   */\n  coerceTreeNodes(value: NzSafeAny[]): NzTreeNode[] {\n    let nodes: NzTreeNode[] = [];\n    if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n      // has not been new NzTreeNode\n      nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n    } else {\n      nodes = value.map((item: NzTreeNode) => {\n        item.service = this.nzTreeService;\n        return item;\n      });\n    }\n    return nodes;\n  }\n\n  /**\n   * Get all nodes({@link NzTreeNode})\n   */\n  getTreeNodes(): NzTreeNode[] {\n    return this.nzTreeService.rootNodes;\n  }\n\n  /**\n   * Get {@link NzTreeNode} with key\n   */\n  getTreeNodeByKey(key: string): NzTreeNode | null {\n    // flat tree nodes\n    const nodes: NzTreeNode[] = [];\n    const getNode = (node: NzTreeNode): void => {\n      nodes.push(node);\n      node.getChildren().forEach(n => {\n        getNode(n);\n      });\n    };\n    this.getTreeNodes().forEach(n => {\n      getNode(n);\n    });\n    return nodes.find(n => n.key === key) || null;\n  }\n\n  /**\n   * Get checked nodes(merged)\n   */\n  getCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getCheckedNodeList();\n  }\n\n  /**\n   * Get selected nodes\n   */\n  getSelectedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getSelectedNodeList();\n  }\n\n  /**\n   * Get half checked nodes\n   */\n  getHalfCheckedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getHalfCheckedNodeList();\n  }\n\n  /**\n   * Get expanded nodes\n   */\n  getExpandedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getExpandedNodeList();\n  }\n\n  /**\n   * Get matched nodes(if nzSearchValue is not null)\n   */\n  getMatchedNodeList(): NzTreeNode[] {\n    return this.nzTreeService.getMatchedNodeList();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './nz-tree-base-node';\nexport * from './nz-tree-base.definitions';\nexport * from './nz-tree-base.service';\nexport * from './nz-tree-service.resolver';\nexport * from './nz-tree-base';\nexport * from './nz-tree-base-util';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}